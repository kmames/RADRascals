//A Utility class to process Stock Item records from the Stock Item Handler
public with sharing class StockItemHandler {
	
	//Default Constructor
	public StockItemHandler() {
		
	}

	//before insert
    public static void checkDuplicate(List<Stock_Item__c> newStockItems) {
      
        //create set containing all the names from the list of new records (used for the query below)
        Set<string> newNames = new Set<string>();
        for(Stock_Item__c si: newStockItems){
            newNames.add(si.Item_Name__c);
        }
        
        //query Stock_Item__c to pull in all records that already exist with the same names. 
        //then create set containing all the names in this list of already existing records
        List<Stock_Item__c> dupedStockItems = [SELECT Item_Name__c
                                               FROM Stock_Item__c
                                               WHERE Item_Name__c in :newNames];
        Set<string> dupNames = new Set<string>();
        for(Stock_Item__c si : dupedStockItems){
            dupNames.add(si.Item_Name__c);
        }

        //for each new item, check if the name of the item is in the set of already existing names. if it is then update the name.
        for(Stock_Item__c si : newStockItems){
            String siName = si.Item_Name__c;
            if(dupNames.contains(siName)){
                si.Item_Name__c=si.Item_Name__c+' Duplicate Item';
            }        
    //Shouldn't insert be in here?
    }
    }
}
